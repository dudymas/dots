#!/bin/echo Do not execute/subshell me. Source me.

__IS_YES='y|Y'

function ghq-cd() {
    if [ $# -eq 0 ] ; then
        echo Tries to cd into a ghq repo.
        echo     See: https://github.com/motemen/ghq
        echo 'Usage: gh-cl <search pattern>'
    else
        cd $(ghq list -p $1 | head -n 1)
    fi
}

function ghq-cl() {
    if [ $# -eq 0 ] ; then
        echo Tries to clone a repo from ghq cache.
        echo     See: https://github.com/motemen/ghq
        echo 'Usage: gh-cl <search pattern>'
    echo
        git clone $(ghq list -p $1 | head -n 1)
    fi
}

function git-clean-pullrequest-branches() {
    REMOTE=${1:-origin}
    echo I am going to delete these:
    prs=( $(git branch -a | grep remotes/$REMOTE | sed -E '/HEAD|master/d') )
    for p in ${prs[@]} ; do
        echo ${p}
    done
    echo 'Is that okay? [y/N]'
    read answer
    if [[ "${answer}" =~ $__IS_YES ]] ; then
        echo 'Deleting...'
        for p in ${prs[@]} ; do
            p=$(echo $p | sed "s-remotes/$REMOTE/--")
            git push --delete $REMOTE $p
        done
        echo "You should run 'git remote prune $REMOTE' if you don't need local caches"
    fi
}

function git-setup-pullrequest-branch() {
    PULLREQUEST=${1:?Please specify a branch name for your pull request}
    REMOTE=${2:-origin}
    CURRENT=$(git rev-parse --abbrev-ref HEAD)
    git branch --set-upstream-to=${REMOTE}/${PULLREQUEST} 2>/dev/null
    if [ $? -ne 0 ] ; then
        echo "Create pull request branch ${REMOTE}/${PULLREQUEST}? [y/N]"
        read answer
        if [[ "${answer}" =~ $__IS_YES ]] ; then
            git push -u $REMOTE ${CURRENT}:$PULLREQUEST
        fi
    fi
    PUSH_DEFAULT=$(git config --global push.default)
    if [[ "$PUSH_DEFAULT" != "upstream" ]] ; then
        echo "Uh oh, you do not have your push settings set to 'upstream'"
        echo "You should run 'git config --global push.default upstream'"
        echo "Otherwise, when you run 'git push' you might get errors..."
    fi
}

function git-close-pullrequest-branch() {
    MASTER=${1:-master}
    REMOTE=${2:-origin}
    UPSTREAM=$(git rev-parse --abbrev-ref --symbolic-full-name @{u})
    CURRENT=$(git rev-parse --abbrev-ref HEAD)
    echo "Push $UPSTREAM to branch $MASTER on ${REMOTE}? [y/N]"
    read answer
    if [[ "${answer}" =~ $__IS_YES ]] ; then
        git push $REMOTE ${UPSTREAM}:${MASTER}
    else
        return 0
    fi
    echo "Would you like to set your upstream back to ${REMOTE}/${MASTER}? [y/N]"
    read answer
    if [[ "${answer}" =~ $__IS_YES ]] ; then
        git branch --set-upstream-to=${REMOTE}/${MASTER} 2>/dev/null
    fi
}
