#!/bin/echo Do not execute/subshell me. Source me instead.

SCRIPT_DIR=$(dirname $0)
. $SCRIPT_DIR/os-cli/functions
. $SCRIPT_DIR/os-cli/os_dock
. $SCRIPT_DIR/docker.bash.functions
. $SCRIPT_DIR/git.bash.functions
. $SCRIPT_DIR/gpg.functions

function add-secret() {
    read -rs TMP
    export $1=$TMP
    unset TMP
}

function jq-reformat() {
    cp $1{,.bak}
    echo Backed up to $1.bak
    cat $1 | jq . > $1
}

function ssh-clear() {
    sed -i '' "/$1/d" /Users/jeremy/.ssh/known_hosts
}

function ssh-id() {
    ssh-add $HOME/.ssh/${1:?specify a key}
}

function ssh-passwd {
    ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no
}

if which cowsay 2>/dev/null >/dev/null ; then
    function random-cowsay {
          local cows=(/usr/local/share/cows/*.cow)
          local rand_cow=$(printf "%s\n" "${cows[RANDOM % ${#cows[@]}]}")
          cowsay -f "${rand_cow}" $@
    }

# why not map command not found to cowsay?
    function command_not_found_handler() {
        random-cowsay $@
    }
fi
